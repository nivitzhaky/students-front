{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/@core/models/api.enum.ts","./src/app/@core/services/auth.guard.ts","./src/app/@core/services/fetcher.service.ts","./src/app/@core/services/toaster.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/component/app-button/app-button.component.ts","./src/app/component/app-button/app-button.component.html","./src/app/component/app-table-filters/app-table-filters.component.ts","./src/app/component/app-table-filters/app-table-filters.component.html","./src/app/pages/course-grades/course-grades.component.ts","./src/app/pages/course-grades/course-grades.component.html","./src/app/pages/login/login.component.ts","./src/app/pages/login/login.component.html","./src/app/pages/profile/profile.component.ts","./src/app/pages/profile/profile.component.html","./src/app/pages/share/send/sendmodal.component.ts","./src/app/pages/share/send/sendmodal.component.html","./src/app/pages/share/upload-image-modal/upload-image-modal.component.ts","./src/app/pages/share/upload-image-modal/upload-image-modal.component.html","./src/app/pages/students/student-profile/student-profile.component.ts","./src/app/pages/students/student-profile/student-profile.component.html","./src/app/pages/students/students-list/removemodal.component.ts","./src/app/pages/students/students-list/removemodal.component.html","./src/app/pages/students/students-list/students-list.component.ts","./src/app/pages/students/students-list/students-list.component.html","./src/app/services/auth.service.ts","./src/app/services/spiner.service.ts","./src/app/services/student.grades.service.ts","./src/app/services/student.service.ts","./src/app/services/user.service.ts","./src/app/utils/utils.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export enum Api {\r\n\r\n  //autentication api\r\n  autentication = 'authenticate',\r\n  userDetails = 'user/details',\r\n\r\n\r\n  //students api\r\n  students = 'api/students',\r\n  studentHighSat = 'api/students/highSat',\r\n  modifyStudent = 'api/students/{id}',\r\n  updateStudent = 'api/students/{id}',\r\n  updateStudentImage = 'api/students/{id}/image',\r\n  studentSendSmsAll = 'api/students/sms/all',\r\n  studentSendSms = 'api/students/sms/byIds',\r\n  studentSendEmail = 'api/students/email/byIds',\r\n\r\n  //students-grades api\r\n  insertStudentGrade = 'api/students/{studentId}/grades?studentId={id}',\r\n  modifyStudentGrade = 'api/students/{studentId}/grades/{id}'\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard  implements CanActivate {\r\n    constructor(public authService: AuthService, protected router: Router) { }\r\n\r\n    canActivate() {\r\n        if (!this.authService.isAuthenticated()) {\r\n            this.router.navigate(['/']);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n}\r\n","\r\nimport { HttpClient, HttpErrorResponse, HttpParams } from '@angular/common/http';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { MonoTypeOperatorFunction, Observable, of, throwError } from 'rxjs';\r\nimport { catchError, delay, mergeMap, retryWhen, switchMap, retry } from 'rxjs/operators';\r\nimport * as _ from 'lodash';\r\nimport { ToasterService } from './toaster.service';\r\nimport { environment } from '../../../environments/environment';\r\nimport { DOCUMENT } from '@angular/common';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FetcherService {\r\n\r\n\r\n  readonly payloadMethods: string[] = ['post', 'put'];\r\n  readonly baseUrl = environment.url;\r\n  private requests: object = {};\r\n\r\n  constructor(private http: HttpClient,\r\n    private toastr: ToasterService,\r\n    @Inject(DOCUMENT) private document: Document) {\r\n  }\r\n\r\n  getToken() {\r\n    return sessionStorage.getItem('token');\r\n  }\r\n\r\n  getHeader() {\r\n    const httpOptions = {\r\n      headers: {\r\n        Authorization: `Bearer ${sessionStorage.getItem('token')}`\r\n      }\r\n    };\r\n\r\n    return httpOptions\r\n  }\r\n\r\n  get<R>(url: string, p: any = {}, ids?: any, options: any = {}, needHeader?: boolean): Observable<R> {\r\n    if (ids) {\r\n      Object.keys(ids).forEach(key => {\r\n        url = url.replace(`{${key}}`, ids[key]);\r\n      });\r\n    }\r\n    let params = new HttpParams();\r\n    for (const key of Object.keys(p)) {\r\n      if (p[key] != null) {\r\n        params = params.append(key, p[key]);\r\n      }\r\n    }\r\n    return this.request('get', url, { params, ...options }, null, needHeader, p.timeoutMs);\r\n  }\r\n\r\n  post<R>(url: string, data: any, ids?: any, options: any = {}, needHeader?: boolean): Observable<R> {\r\n    if (ids) {\r\n      Object.keys(ids).forEach(key => {\r\n        url = url.replace(`{${key}}`, ids[key]);\r\n      });\r\n    }\r\n    return this.request('post', url, options, data, needHeader, options?.timeoutMs);\r\n  }\r\n\r\n  put<R>(url: string, data: any, ids?: any, options: any = {}, needHeader?: boolean): Observable<R> {\r\n    if (ids) {\r\n      Object.keys(ids).forEach(key => {\r\n        url = url.replace(`{${key}}`, ids[key]);\r\n      });\r\n    }\r\n    return this.request('put', url, options, data, needHeader, options?.timeoutMs );\r\n  }\r\n\r\n  delete<R>(url: string, ids?: any, options: any = {}, data?: any, needHeader?: boolean): Observable<R> {\r\n    if (ids) {\r\n      Object.keys(ids).forEach(key => {\r\n        url = url.replace(`{${key}}`, ids[key]);\r\n      });\r\n    }\r\n    return this.request('delete', url, options, data, needHeader, options?.timeoutMs);\r\n  }\r\n\r\n  createFormData(form) {\r\n    const formData: FormData = new FormData();\r\n    Object.keys(form)\r\n      .forEach((item: string) => {\r\n        if (form[item] !== null && typeof form[item] !== 'undefined') {\r\n          formData.append(item, form[item]);\r\n        }\r\n      });\r\n    return formData;\r\n  }\r\n\r\n  private request<R>(method: string, url: string, options: any, data?: any, needHeader: boolean = true, timeoutMs = 1000 * 60 * 5): Observable<R> {\r\n    const key: string = [method, url, options?.params ? options?.params.toString() : 'empty'].join('::');\r\n    let request: Observable<any>;\r\n    if (needHeader) {\r\n      options.headers = this.getHeader().headers;\r\n    }\r\n    if (this.payloadMethods.includes(method)) {\r\n      request = this.http[method](`${this.baseUrl}/${url}`, data, options);\r\n    } else {\r\n      request = this.http[method](`${this.baseUrl}/${url}`, options);\r\n    }\r\n  \r\n    return this.requests[key] = request\r\n      .pipe(\r\n        retryWhen((errors: Observable<any>) => errors.pipe(\r\n          mergeMap(error => {\r\n            if (error.status === 401 && this.document.location.href.indexOf('login') === -1) {\r\n              window.sessionStorage.clear();\r\n              //this.document.location.href = '/';\r\n            } else {\r\n              return throwError(error);\r\n            }\r\n          }\r\n          ))\r\n        ),\r\n        switchMap((response: R) => {\r\n          return of(response);\r\n        }),\r\n        catchError((response: HttpErrorResponse | any) => {\r\n          if (options.noError) {\r\n            return of(response);\r\n          }\r\n          if (options.noToastr) {\r\n            return throwError(response);\r\n          }\r\n          \r\n          if (response.error && typeof response.error === 'object') {\r\n            const errors = Object.values(response.error);\r\n            errors.forEach(err => {\r\n              if (typeof err === 'string') {\r\n               // this.toastr.danger(err, '');\r\n              } else {\r\n                let message = err[0];\r\n                if (message) {\r\n                  try {\r\n                    message = JSON.parse(message.replace(/'/g, '\"'));\r\n                  } catch (error) {\r\n                    console.error(error);\r\n                  }\r\n                }\r\n                if (_.isArray(message)) {\r\n                  message = _.join(message, '\\n');\r\n                }\r\n              }\r\n            });\r\n          } \r\n          return throwError(response);\r\n        })\r\n      );\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { SafeHtml } from '@angular/platform-browser';\r\n\r\nexport enum ToasterStatus {\r\n    INFO = 'status-info',\r\n    ERROR = 'status-danger',\r\n    SUCCESS = 'status-success',\r\n    WARNING = 'status-warning'\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ToasterService {\r\n\r\n    constructor(private toastr: ToastrService) {\r\n    }\r\n\r\n    info(message: string | SafeHtml, title?: string, isHtmlBody?: boolean): void {\r\n        this.showToaster(message, title, ToasterStatus.INFO, isHtmlBody);\r\n    }\r\n\r\n    danger(message: string | SafeHtml, title?: string, isHtmlBody?: boolean): void {\r\n        this.showToaster(message, title, ToasterStatus.ERROR, isHtmlBody);\r\n    }\r\n\r\n    success(message: string | SafeHtml, title?: string, isHtmlBody?: boolean): void {\r\n        this.showToaster(message, title, ToasterStatus.SUCCESS, isHtmlBody);\r\n    }\r\n\r\n    warning(message: string | SafeHtml, title?: string, isHtmlBody?: boolean): void {\r\n        this.showToaster(message, title, ToasterStatus.WARNING, isHtmlBody);\r\n    }\r\n\r\n    private showToaster(message: string | SafeHtml, title: string, status: ToasterStatus, isHtmlBody?: boolean): void {\r\n        const toaster = this.toastr.show('', '', {\r\n            positionClass: 'toast-bottom-left',\r\n            //tapToDismiss: true,\r\n           // timeOut: 5000,\r\n        });\r\n\r\n        toaster.portal.instance.data = {\r\n            title,\r\n            message,\r\n            status,\r\n            isHtmlBody\r\n        };\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { StudentsListComponent } from './pages/students/students-list/students-list.component';\r\nimport { StudentProfileComponent } from './pages/students/student-profile/student-profile.component';\r\nimport { ProfileComponent } from './pages/profile/profile.component';\r\nimport { AuthGuard } from '../app/@core/services/auth.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', redirectTo: '/login', pathMatch: 'full' \r\n  },\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent,\r\n  },\r\n  {\r\n    path: 'students-list',\r\n    component: StudentsListComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'student-profile/:id',\r\n    component: StudentProfileComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'user-profile',\r\n    component: ProfileComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n \r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { Event, NavigationCancel, NavigationEnd, NavigationError, NavigationStart, Router } from '@angular/router';\r\nimport { SpinerService } from './services/spiner.service';\r\nimport { AuthService } from './services/auth.service';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { IStudent } from './models/student';\r\n// import * as $ from 'jquery';\r\nimport { StudentService } from './services/student.service';\r\nimport { UserService } from './services/user.service';\r\nimport { IUser } from './models/user';\r\nimport Utils from './utils/utils';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'webapp';\r\n  subscription: Subscription;\r\n  tostMessage: string;\r\n  loading: boolean = false;\r\n  sideBarIsOpen: boolean = true;\r\n  isExpanded = true;\r\n  isShowing = false;\r\n  user: IUser;\r\n  terms: string;\r\n  isDarkMode: boolean = false;\r\n  isMobile: boolean = false;\r\n\r\n  constructor(@Inject(DOCUMENT) private document: Document, private router: Router,\r\n    private spinerService: SpinerService,\r\n    private authService: AuthService,\r\n    private userService: UserService,\r\n    private studentService: StudentService) {\r\n    this.isMobile = Utils.checkIsmobile();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.spinerService.getEventListner().subscribe(isLoading => {\r\n      this.loading = isLoading;\r\n    })\r\n    this.getUserProfile();\r\n  }\r\n\r\n  getUserProfile() {\r\n    this.userService.getUserDetailsData().subscribe((res) => {\r\n      this.user = res;\r\n    })\r\n  }\r\n\r\n  onSearch() {\r\n    this.studentService.setTerms(this.terms);\r\n    this.router.navigateByUrl('/', { skipLocationChange: true }).then(() =>\r\n      this.router.navigate(['/students-list']));\r\n  }\r\n\r\n  isUserLogedIn() {\r\n    const isAutenticated = this.authService.isAuthenticated();\r\n    return isAutenticated;\r\n  }\r\n\r\n  onLogout() {\r\n    window.sessionStorage.clear();\r\n    this.document.location.href = '/';\r\n  }\r\n\r\n  changeDark() {\r\n    this.isDarkMode = !this.isDarkMode;\r\n    if (this.isDarkMode) {\r\n      document.body.classList.add('dark');\r\n    }\r\n    else {\r\n      document.body.classList.remove('dark');\r\n    }\r\n  }\r\n}\r\n","<mat-spinner *ngIf=\"loading\" mode=\"indeterminate\"></mat-spinner>\r\n<!--<router-outlet></router-outlet>-->\r\n<app-tost [tostMessage]=\"tostMessage\" *ngIf=\"tostMessage\"></app-tost>\r\n\r\n<!--navigation menu-->\r\n<div class=\"main-view app-container\">\r\n  <mat-toolbar color=\"default\" *ngIf=\"isUserLogedIn()\">\r\n    <!--<div fxHide.gt-xs>-->\r\n    <!--<button type=\"button\" aria-label=\"Toggle sidenav\" mat-icon-button (click)=\"sideBarIsOpen = !sideBarIsOpen; drawer.toggle(); \" color=\"secondary\">\r\n      <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\r\n    </button>-->\r\n\r\n    <img class=\"rocket\" src=\"./assets/images/navigation rocket image.svg\" />\r\n    <div class=\"search-wrapper\">\r\n\r\n      <img src=\"./assets/images/search.svg\" height=\"15\" width=\"15\" />\r\n      <input class=\"search-input\" placeholder=\"Search\" [(ngModel)]=\"terms\" (keyup.enter)=\"onSearch()\" />\r\n    </div>\r\n    <span class=\"spacer\"></span>\r\n\r\n    <div *ngIf=\"user\" class=\"user-profile\">\r\n      <span class=\"user-profile__notifications\">\r\n        <img src=\"./assets/images/chats.svg\" height=\"15\" width=\"15\" />\r\n        <img src=\"./assets/images/bell.svg\" height=\"15\" width=\"15\" />\r\n      </span>\r\n      <img [src]=\"user.avatar\" />\r\n      <span class=\"user-profile__name\">{{user.name}}</span>\r\n      <i class=\"fa fa-caret-down\" aria-hidden=\"true\" [matMenuTriggerFor]=\"menurofile\"></i>\r\n      <mat-menu #menurofile=\"matMenu\" class=\"profile-menu\">\r\n        <ng-template matMenuContent>\r\n          <button mat-menu-item>\r\n            <img src=\"./assets/images/dark-mode.svg\" height=\"15\" width=\"15\" /> Dark Mode\r\n            <span class=\"pull-right toggle\">\r\n              <mat-slide-toggle [checked]=\"isDarkMode ? true : false\" (change)=\"changeDark()\"></mat-slide-toggle>\r\n            </span>\r\n          </button>\r\n          <button mat-menu-item (click)=\"onLogout()\"><img src=\"./assets/images/export.svg\" height=\"15\" width=\"15\" /> Sign Out</button>\r\n        </ng-template>\r\n      </mat-menu>\r\n    </div>\r\n    \r\n  </mat-toolbar>\r\n  <mat-toolbar  *ngIf=\"isMobile\"  class=\"student-section\">\r\n      <a routerLink=\"/students-list\">\r\n        <img src=\"./assets/images/students_white.svg\" height=\"16\" width=\"16\" />\r\n        Students\r\n      </a>\r\n  </mat-toolbar>\r\n  <mat-sidenav-container  autosize class=\"sidenav-container\">\r\n    <mat-sidenav #drawer  *ngIf=\"!isMobile\" class=\"sidenav\"\r\n                 [attr.role]=\"'navigation'\"\r\n                 [mode]=\"'side'\"\r\n                 [(opened)]=\"isUserLogedIn() && sideBarIsOpen\">\r\n      <mat-nav-list>\r\n        <a mat-list-item routerLink=\"/students-list\">\r\n          <img src=\"./assets/images/students.svg\" height=\"40\" width=\"40\" />\r\n          Students\r\n        </a>\r\n      </mat-nav-list>\r\n    </mat-sidenav>\r\n    <mat-sidenav-content [ngClass]=\"{'navbar-open': isUserLogedIn() && sideBarIsOpen}\">\r\n\r\n      <!-- Add Content Here -->\r\n      <main class=\"container mar-top-10\">\r\n        <router-outlet>\r\n        </router-outlet>\r\n      </main>\r\n    </mat-sidenav-content>\r\n  </mat-sidenav-container>\r\n</div>\r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { StudentsListComponent } from './pages/students/students-list/students-list.component';\r\nimport { StudentProfileComponent } from './pages/students/student-profile/student-profile.component';\r\nimport { ProfileComponent } from './pages/profile/profile.component';\r\nimport { RemoveModalComponent } from './pages/students/students-list/removemodal.component';\r\nimport { SendModalComponent } from './pages/share/send/sendmodal.component';\r\nimport { CourseGradesComponent } from './pages/course-grades/course-grades.component';\r\nimport { AuthGuard } from '../app/@core/services/auth.guard';\r\n\r\nimport { MatTableExporterModule } from 'mat-table-exporter';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\n\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\n\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { A11yModule } from '@angular/cdk/a11y';\r\nimport { ClipboardModule } from '@angular/cdk/clipboard';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport { CdkStepperModule } from '@angular/cdk/stepper';\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport { CdkTreeModule } from '@angular/cdk/tree';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { ToasterService } from './@core/services/toaster.service';\r\nimport { FetcherService } from './@core/services/fetcher.service';\r\nimport { UserService } from './services/user.service';\r\nimport { StudentService } from './services/student.service';\r\nimport { StudentGradeService } from './services/student.grades.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { AppButtonComponent } from './component/app-button/app-button.component';\r\nimport { AppTableFiltersComponent } from './component/app-table-filters/app-table-filters.component';\r\nimport { UploadImageModalComponent } from './pages/share/upload-image-modal/upload-image-modal.component';\r\n\r\nimport { NgxDropzoneModule } from 'ngx-dropzone';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    AppButtonComponent,\r\n    AppTableFiltersComponent,\r\n    LoginComponent,\r\n    StudentsListComponent,\r\n    StudentProfileComponent,\r\n    ProfileComponent,\r\n    RemoveModalComponent,\r\n    SendModalComponent,\r\n    UploadImageModalComponent,\r\n    CourseGradesComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    MatTableExporterModule,\r\n    HttpClientModule,\r\n    OverlayModule,\r\n    MatProgressSpinnerModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatIconModule,\r\n    BrowserAnimationsModule,\r\n    MatMenuModule,\r\n    MatListModule,\r\n    A11yModule,\r\n    ClipboardModule,\r\n    CdkStepperModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatInputModule,\r\n    MatNativeDateModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    PortalModule,\r\n    ScrollingModule,\r\n    NgxDropzoneModule,\r\n    ToastrModule.forRoot()\r\n  ],\r\n  exports: [\r\n    \r\n  ],\r\n  providers: [AuthGuard],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\ntype ButtonType = 'primary' | 'secondary' | 'danger' | 'primary-icon' |\r\n  'secondary-icon' | 'icon' | 'ghost' | 'link-btn' | 'text-link';\r\n\r\ntype ButtonActionType = 'button' | 'submit';\r\n@Component({\r\n  selector: 'app-button',\r\n  templateUrl: './app-button.component.html',\r\n  styleUrls: ['./app-button.component.scss']\r\n})\r\nexport class AppButtonComponent {\r\n  @Input() type: ButtonActionType = 'button';\r\n  @Input() title: string;\r\n  @Input() theme: ButtonType = 'primary';\r\n  @Input() disabled: boolean;\r\n  @Input() icon: string;\r\n  @Input() image: string;\r\n  @Input() isBold: boolean = false;\r\n  @Input() isLoading: boolean = false;\r\n  @Input() iconColor: string;\r\n  @Input() imgClass: string;\r\n\r\n  @Output() click = new EventEmitter();\r\n  constructor() { }\r\n\r\n  public onClick($event) {\r\n    $event.preventDefault();\r\n    $event.stopPropagation();\r\n    this.click.emit($event);\r\n  }\r\n}\r\n\r\n//  Examples:\r\n/*\r\n<app-button [icon]=\"'dr-icon-arrow-down'\">hello</app-button>\r\n<app-button [icon]=\"'fa fa-refresh'\" [theme]=\"'primary-icon'\"></app-button>\r\n<app-button [icon]=\"'fa fa-refresh'\" [isDisabled]=\"true\" [theme]=\"'primary-icon'\"></app-button>\r\n<app-button [theme]=\"'secondary'\" [icon]=\"'fa fa-refresh'\" [iconColor]=\"'#03A678'\"></app-button>\r\n*/\r\n","<button (click)=\"onClick($event)\" [disabled]=\"disabled\" [attr.is-loading]=\"isLoading\" [attr.bold]=\"isBold\"\r\n        [attr.icon]=\"icon ? true : false\" [attr.theme]=\"theme\"\r\n        [attr.type]=\"type\">\r\n  <ng-container *ngIf=\"!isLoading\">\r\n    <img  class=\"dr\" [src]=\"image\" [ngClass]=\"imgClass\" />\r\n    <ng-content>\r\n    </ng-content>\r\n  </ng-container>\r\n</button>\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { trigger } from '@angular/animations';\r\nimport { transition } from '@angular/animations';\r\nimport { style } from '@angular/animations';\r\nimport { animate } from '@angular/animations';\r\nimport { IFilter } from '../../models/filter';\r\ntype ButtonType = 'primary' | 'secondary' | 'danger' | 'primary-icon' |\r\n  'secondary-icon' | 'icon' | 'ghost' | 'link-btn' | 'text-link';\r\n\r\n@Component({\r\n  selector: 'app-table-filters',\r\n  templateUrl: './app-table-filters.component.html',\r\n  styleUrls: ['./app-table-filters.component.scss'],\r\n  animations: [\r\n    trigger(\r\n      'animation', [\r\n      transition(':enter', [\r\n        style({ transform: 'translateX(100%)', opacity: 0 }),\r\n        animate('500ms', style({ transform: 'translateX(0)',opacity: 1 }))\r\n      ]),\r\n      transition(':leave', [\r\n        style({ transform: 'translateX(0)', 'opacity': 1 }),\r\n        animate('500ms', style({ transform: 'translateX(100%)',opacity: 0 }))\r\n      ])\r\n    ]\r\n    )\r\n  ],\r\n})\r\n\r\n\r\nexport class AppTableFiltersComponent {\r\n  filters: IFilter = {\r\n    name: null,\r\n    fromDate: null,\r\n    toDate: null,\r\n    fromSat: null,\r\n    toSat: null,\r\n    fromAvg: null,\r\n    toAvg: null\r\n  }\r\n\r\n  @Input() terms: string;\r\n  @Output() apply = new EventEmitter<IFilter>();\r\n  @Output() clearAll = new EventEmitter<IFilter>();\r\n\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {\r\n    this.filters.name = this.terms;\r\n  }\r\n\r\n  public onApply($event) {\r\n    this.apply.emit(this.filters);\r\n  }\r\n\r\n  public onClearAll($event) {\r\n    this.clearFilters();\r\n    this.clearAll.emit(this.filters);\r\n  }\r\n\r\n  clearFilters() {\r\n    this.filters = {\r\n      name: null,\r\n      fromDate: null,\r\n      toDate: null,\r\n      fromSat: null,\r\n      toSat: null,\r\n      fromAvg: null,\r\n      toAvg: null\r\n    }\r\n  }\r\n}\r\n","<div class=\"table-filters\" @animation>\r\n  <div class=\"item1\">\r\n    <div class=\"table-filters__item name\">\r\n      <label>Name</label>\r\n      <input type=\"text\" [(ngModel)]=\"filters.name\" />\r\n    </div>\r\n    <div class=\"table-filters__item date\">\r\n      <label>Date Of Birth Range</label>\r\n      <div>\r\n        <mat-form-field>\r\n          <input matInput [matDatepicker]=\"fromDate\" [(ngModel)]=\"filters.fromDate\">\r\n          <mat-datepicker-toggle matSuffix [for]=\"fromDate\"></mat-datepicker-toggle>\r\n          <mat-datepicker #fromDate></mat-datepicker>\r\n        </mat-form-field>\r\n\r\n        <span>To</span>\r\n\r\n        <mat-form-field>\r\n          <input matInput [matDatepicker]=\"topicker\" [(ngModel)]=\"filters.toDate\">\r\n          <mat-datepicker-toggle matSuffix [for]=\"topicker\"></mat-datepicker-toggle>\r\n          <mat-datepicker #topicker></mat-datepicker>\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"item1\">\r\n    <div class=\"table-filters__item score\">\r\n      <label>SAT Sore</label>\r\n      <div>\r\n        <input id=\"fromSat\" type=\"number\" [(ngModel)]=\"filters.fromSat\" />\r\n        <span>To</span>\r\n        <input id=\"toSat\" type=\"number\" [(ngModel)]=\"filters.toSat\" />\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <div class=\"table-filters__item score\">\r\n        <label>Avg Score</label>\r\n        <div>\r\n          <input id=\"fromAvg\" type=\"number\" [(ngModel)]=\"filters.fromAvg\" />\r\n          <span>To</span>\r\n          <input id=\"toAvg\" type=\"number\" [(ngModel)]=\"filters.toAvg\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"table-filters__action\">\r\n    <app-button [title]=\"'Apply'\" (click)=\"onApply($event)\">Apply</app-button>\r\n    <app-button [title]=\"'Cancel'\" [theme]=\"'black'\" (click)=\"onClearAll($event)\">Clear All</app-button>\r\n  </div>\r\n</div>\r\n\r\n","import { Component, OnInit, Injectable, Inject, ViewChild, AfterViewInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\n\r\nimport { IStudent } from './../../models/student';\r\nimport { SpinerService } from '../../services/spiner.service';\r\nimport { StudentGradeService } from '../../services/student.grades.service';\r\nimport { IGrade } from '../../models/grade';\r\n\r\n\r\n@Component({\r\n  selector: 'app-course-grades',\r\n  templateUrl: './course-grades.component.html',\r\n  styleUrls: ['./course-grades.component.scss']\r\n})\r\nexport class CourseGradesComponent implements OnInit {\r\n\r\n  grades: IGrade[] = [];\r\n  @Input() student: IStudent;\r\n  @Output() courseGrades = new EventEmitter();\r\n\r\n  constructor(\r\n    private studentGradeService: StudentGradeService,\r\n    private spinerService: SpinerService) {\r\n\r\n  }\r\n\r\n  async ngOnInit() {\r\n\r\n    this.getGrades();\r\n   \r\n  }\r\n\r\n  getGrades() {\r\n    if (this.student?.studentGrades?.length) {\r\n      this.grades = [];\r\n      this.student?.studentGrades.forEach((data: any, index) => {\r\n        this.grades.push({ courseName: data.courseName, courseScore: data.courseScore, id: data.id, isAdded: index !== this.student.studentGrades.length - 1 });\r\n      });\r\n    }\r\n    if (!this.grades.length) {\r\n      this.addNewGrade();\r\n    }\r\n\r\n  }\r\n\r\n  addNewGrade() {\r\n    this.grades.push({ courseName: '', courseScore: 0 })\r\n  }\r\n\r\n  onAddGrade(data:any, event) {\r\n    if (!data.courseName && !data.courseScore) {\r\n      return;\r\n    } else {\r\n      data.isAdded = true;  \r\n      if (!data.id) {\r\n        this.onInsertStudentGrade(data);\r\n      }\r\n    }\r\n  }\r\n\r\n  onChangeGrade(data) {\r\n    if (data.courseName && data.courseScore && data.id) {\r\n      this.onUpdateStudentGrade(data);\r\n    }\r\n  }\r\n\r\n  onChangeCourseName(data) {\r\n    if (data.courseName && data.courseScore && data.id) {\r\n      this.onUpdateStudentGrade(data);\r\n    }\r\n  }\r\n\r\n  onRemoveGrade(data: IGrade, index) {\r\n    this.grades.splice(index, 1);\r\n    this.spinerService.setSpinerEvent(true);\r\n    this.studentGradeService.deleteStudentGrade(this.student.id, data.id).subscribe(result => {\r\n      this.spinerService.setSpinerEvent(false);\r\n      this.updateGrades();\r\n    }, error => {\r\n        console.error(error);\r\n        this.updateGrades();\r\n      this.spinerService.setSpinerEvent(false);\r\n    });\r\n  }\r\n\r\n  public onInsertStudentGrade(data: IGrade) {\r\n    this.spinerService.setSpinerEvent(true);\r\n    this.studentGradeService.insertStudentGrade(this.student.id, data).subscribe(result => {\r\n      data.id = result.id;\r\n      this.spinerService.setSpinerEvent(false);\r\n      this.updateGrades();\r\n    }, error => {\r\n      console.error(error)\r\n      this.spinerService.setSpinerEvent(false);\r\n    });\r\n    this.addNewGrade();\r\n  }\r\n\r\n  public onUpdateStudentGrade(data: IGrade) {\r\n    this.spinerService.setSpinerEvent(true);\r\n    this.studentGradeService.updateStudentGrade(this.student.id, data.id, data).subscribe(result => {\r\n      this.spinerService.setSpinerEvent(false);\r\n      this.updateGrades();\r\n    }, error => {\r\n      console.error(error)\r\n      this.spinerService.setSpinerEvent(false);\r\n    });\r\n  }\r\n\r\n  updateGrades() {\r\n    this.courseGrades.emit(this.grades);\r\n  }\r\n\r\n}\r\n","<div class=\"course-grades\">\r\n  <div class=\"course-grades__wrapper\" *ngFor=\"let data of grades; let i=index;\">\r\n    <input type=\"text\" class=\"course-name\" placeholder=\"Course Name\" [(ngModel)]=\"data.courseName\" (change)=\"onChangeCourseName(data)\" />\r\n    <div class=\"line\"></div>\r\n    <input type=\"number\" class=\"grade\" placeholder=\"Grade\" [(ngModel)]=\"data.courseScore\" (change)=\"onChangeGrade(data)\" style=\"padding:6px;\" min=\"0\" max=\"100\" />\r\n    <div *ngIf=\"!data.isAdded\" class=\"add-grade\" (click)=\"onAddGrade(data)\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></div>\r\n    <div *ngIf=\"data.isAdded\" class=\"remove-grade\" (click)=\"onRemoveGrade(data, index)\"><i class=\"fa fa-minus\" aria-hidden=\"true\"></i></div>\r\n  </div>\r\n</div>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, retry } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { IStudent } from './../../models/student';\r\nimport { UserService } from '../../services/user.service';\r\nimport { SpinerService } from '../../services/spiner.service';\r\nimport { StudentService } from '../../services/student.service';\r\nimport Utils from './../../utils/utils'\r\nimport { IUser } from '../../models/user';\r\n\r\n@Component({\r\n  selector: 'login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  loginForm: FormGroup;\r\n  submitted: boolean = false;\r\n  errorMsg: string;\r\n  errorStatus: number;\r\n  isMobile: boolean = false;\r\n\r\n\r\n  constructor(private http: HttpClient,\r\n    private formBuilder: FormBuilder,\r\n    public router: Router,\r\n    private userService: UserService,\r\n    private studentService: StudentService,\r\n    private spinerService: SpinerService) {\r\n    this.isMobile = Utils.checkIsmobile();\r\n  \t}\r\n\r\n\t\r\n  ngOnInit(): void {\r\n    window.sessionStorage.clear();\r\n    this.loginForm = new FormGroup({ \r\n      username: new FormControl('', Validators.required),\r\n      password: new FormControl('', Validators.required)\r\n    });\r\n\t}\r\n\r\n  private handleError(error: HttpErrorResponse) {\r\n    this.errorStatus = error.status;\r\n\r\n\t  if (error.error instanceof ErrorEvent) {\r\n\t    // A client-side or network error occurred. Handle it accordingly.\r\n\t    console.error('An error occurred:', error.error.message);\r\n\t  } else {\r\n\t    console.error(\r\n\t      `Backend returned code ${error.status}, ` +\r\n\t      `body was: ${error.error}`);\r\n    }\r\n    \r\n\t  // Return an observable with a user-facing error message.\r\n    return throwError({\r\n      status: this.errorStatus, msg: 'Something bad happened; please try again later.' });\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.loginForm.controls; }\r\n\r\n  onLogin() {\r\n    this.errorMsg = \"\";\r\n    this.submitted = true;\r\n    // stop here if form is invalid\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.spinerService.setSpinerEvent(true);\r\n    return this.userService.autentication(this.f.username.value, this.f.password.value)\r\n      .pipe(catchError(this.handleError))\r\n      .subscribe((res: any) => {\r\n        sessionStorage.setItem('token', res.token);\r\n        this.userService.getuserDetails().subscribe((res: IUser) => {\r\n          this.userService.setUserDetailsData(res);\r\n        }) \r\n        this.router.navigateByUrl('/students-list');\r\n      })\r\n  }\r\n}\r\n","<div class=\"body\" [ngClass]=\"{'mobile': isMobile}\">\r\n  <div class=\"left-side\">\r\n    <form [formGroup]=\"loginForm\" class=\"form\" (ngSubmit)=\"onLogin()\">\r\n      <!--<div class=\"form\">-->\r\n        <div class=\"form__content\">\r\n          <div class=\"form__content__header\">\r\n            <img class=\"rocket\" src=\"./assets/images/login page rocket image.svg\" />\r\n            <h1 class=\"form__content__heading\">Coding Bootcamp Student System</h1>\r\n            <!--<div class=\"form__content__description\">\r\n              Lorem Ipsum Dolor Sit Amet, Consectetur Adipiscing\r\n            </div>-->\r\n          </div>\r\n          <div class=\"form__field\">\r\n            <div class=\"input-group\">\r\n              <span class=\"input-group-addon\">\r\n                <img src=\"./assets/images/account.svg\" height=\"22\" width=\"18\" />\r\n              </span>\r\n              <input class=\"form__input\" type=\"email\"  formControlName=\"username\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\r\n              <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.username.errors.required\">Username is required</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form__field\">\r\n            <div class=\"input-group\">\r\n              <span class=\"input-group-addon\">\r\n                <img src=\"./assets/images/lock-icon.svg\" height=\"22\" width=\"18\" />\r\n              </span>\r\n              <input type=\"password\" formControlName=\"password\" class=\"form__input\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\r\n              <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form__field form__submit\">\r\n            <app-button [title]=\"'Log in to your Account'\" [type]=\"'submit'\" (click)=\"onLogin()\">Log in to your Account</app-button>\r\n\r\n          </div>\r\n        </div>\r\n        <div *ngIf=\"errorMsg\" class=\"alert alert-danger\" role=\"alert\">\r\n          {{errorMsg}}\r\n        </div>\r\n      <!--</div>-->\r\n    </form>\r\n  </div>\r\n  <div *ngIf=\"!isMobile\" class=\"right-side\">\r\n\r\n    <div class=\"cta\">\r\n      <div class=\"cta__content\">\r\n        <p>Best Platform for you to learn coding</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!--<div class=\"login\">\r\n  <div class=\"login-form\">\r\n    <form>\r\n      <h5 class=\"head-txt\">ברוכים הבאים</h5>\r\n      <div class=\"login-form-input\">\r\n        <label for=\"\">שם משתמש</label>\r\n        <input type=\"text\" class=\"form-control\" name=\"username\" [(ngModel)]=\"user.username\" autocomplete=\"new-user\"\r\n               placeholder=\"הזן שם משתמש\"/>\r\n      </div>\r\n      <div class=\"login-form-input\">\r\n        <label for=\"\">סיסמא</label>\r\n        <input type=\"password\" class=\"form-control\" name=\"password\" [(ngModel)]=\"user.password\" autocomplete=\"new-password\"\r\n               placeholder=\"הזן סיסמא\"/>\r\n      </div>\r\n      <div class=\"login-form-input\">\r\n        <button (click)=\"onLogin()\" [disabled]=\"user.username === '' || user.password === ''\">כניסה</button>\r\n      </div>\r\n      <div *ngIf=\"errorMsg\" class=\"alert alert-danger\" role=\"alert\">\r\n        {{errorMsg}}\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>-->\r\n","import { Component, OnInit, Injectable, Inject, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\n\r\nimport { IStudent } from './../../models/student';\r\nimport { SpinerService } from '../../services/spiner.service';\r\nimport { StudentService } from '../../services/student.service';\r\n\r\n\r\n@Component({\r\n  selector: 'profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.scss']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  dialogData: IStudent;\r\n\r\n  isAuthenticated: boolean;\r\n  direction: string;\r\n  msg: string;\r\n  sucessMsg: string;\r\n  fieldTextType: boolean;\r\n  memberForm: any;\r\n  isCreated: boolean = false;\r\n  studentDetails: IStudent;\r\n  userObj: any;\r\n  isMobile = false;\r\n  title: string = \"יעף ניהול עובדים\";\r\n  displayedColumns: string[] = ['id', 'firstName', 'lastName', 'idNumber', 'phoneNumber', 'email', 'location', 'role', 'actions'];\r\n\r\n\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private dialog: MatDialog,\r\n    private studentService: StudentService,\r\n    private spinerService: SpinerService) {\r\n\r\n  }\r\n\r\n  async ngOnInit() {\r\n\r\n  }\r\n\r\n  onRefresh() {\r\n    location.reload();\r\n  }\r\n\r\n  \r\n}\r\n","<div class=\"student-profile\">\r\n  \r\n</div>\r\n\r\n\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { IMessage } from '../../../models/message';\r\nimport { SpinerService } from '../../../services/spiner.service';\r\nimport { StudentService } from '../../../services/student.service';\r\nimport { IStudent } from '../../../models/student';\r\nimport { ToasterService } from '../../../@core/services/toaster.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-sendmodal',\r\n  templateUrl: './sendmodal.component.html',\r\n  styleUrls: ['./sendmodal.component.css']\r\n})\r\n\r\nexport class SendModalComponent implements OnInit {\r\n\r\n  title: string;\r\n  subTitle: string;\r\n  sendMessage: IMessage;\r\n  isSms: boolean = false;\r\n  students: IStudent[];\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<SendModalComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private studentService: StudentService,\r\n    private spinerService: SpinerService) { }\r\n\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.isSms = this.data.isSms;\r\n    this.students = this.data.students;\r\n    this.initTitles();\r\n    this.sendMessage = {\r\n      subject: \"\",\r\n      message:\"\"\r\n    }\r\n  }\r\n\r\n  initTitles() {\r\n    this.title = this.isSms ? 'Send SMS' : 'Send Email';\r\n    this.subTitle = this.isSms ? 'Or Email' : 'Or SMS';\r\n  }\r\n\r\n  /*onChangeType() {\r\n    this.isSms = !this.isSms;\r\n    this.data.isSms = this.isSms;\r\n    this.initTitles();\r\n  }*/\r\n\r\n  onSend() {\r\n  \r\n    let ids = this.students.map((s) => { return s.id });\r\n    //this.spinerService.setSpinerEvent(true);\r\n    if (this.isSms) {\r\n      this.studentService.sendSms(this.sendMessage.message, ids).subscribe((result) => {\r\n        this.spinerService.setSpinerEvent(false);\r\n      });\r\n    }\r\n    else {\r\n      this.studentService.sendEmail(this.sendMessage.subject, this.sendMessage.message, ids).subscribe((result) => {\r\n        this.spinerService.setSpinerEvent(false);\r\n      });\r\n    }\r\n  }\r\n}\r\n","<div class=\"wrapper\" [ngClass]=\"{'is-sms': data.isSms, 'is-email': !data.isSms}\">\r\n  <h1 mat-dialog-title>{{title}}</h1>\r\n  <div class=\"sub-title\">{{subTitle}}</div>\r\n  <button class=\"close\" mat-button [ngClass]=\"{'is-sms' : data.isSms, 'is-email': !data.isSms}\" (click)=\"onNoClick()\">X</button>\r\n  <div mat-dialog-content >\r\n    <div>\r\n      <label>Subject</label>\r\n      <input type=\"text\" [(ngModel)]=\"sendMessage.subject\" placeholder=\"Your Subject\" />\r\n    </div>\r\n    <div>\r\n      <label>Message</label>\r\n      <textarea [(ngModel)]=\"sendMessage.message\" placeholder=\"Your Message\"></textarea>\r\n    </div>\r\n  </div>\r\n  <div mat-dialog-actions>\r\n    <app-button *ngIf=\"data.isSms\" mat-button cdkFocusInitial (click)=\"onSend()\" [disabled]=\"!sendMessage.subject || !sendMessage.message\" [theme]=\"'secondary'\" [image]=\"'./assets/images/sms_blue.svg'\">Send SMS</app-button>\r\n    <app-button *ngIf=\"data.isSms\" mat-button mat-dialog-close style=\" border: 1px solid #E0ECFF;\">Discard</app-button>\r\n\r\n    <app-button *ngIf=\"!data.isSms\" mat-button cdkFocusInitial (click)=\"onSend()\" [disabled]=\"!sendMessage.subject || !sendMessage.message\" [image]=\"'./assets/images/mail_white.svg'\">Send Email</app-button>\r\n    <app-button *ngIf=\"!data.isSms\" mat-button mat-dialog-close [theme]=\"'secondary'\">Discard</app-button>\r\n  </div>\r\n</div>\r\n\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { IMessage } from '../../../models/message';\r\nimport { SpinerService } from '../../../services/spiner.service';\r\nimport { StudentService } from '../../../services/student.service';\r\nimport { IStudent } from '../../../models/student';\r\nimport { ToasterService } from '../../../@core/services/toaster.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-upload-image-modal',\r\n  templateUrl: './upload-image-modal.component.html',\r\n  styleUrls: ['./upload-image-modal.component.css']\r\n})\r\n\r\nexport class UploadImageModalComponent implements OnInit {\r\n\r\n  files: File[] = [];\r\n  student: IStudent;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<UploadImageModalComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: IStudent,\r\n    private studentService: StudentService,\r\n    private spinerService: SpinerService) { }\r\n\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.student = this.data;\r\n  }\r\n\r\n  onSelect(event) {\r\n    this.files.push(...event.addedFiles);\r\n  }\r\n\r\n  onRemove(event) {\r\n    this.files.splice(this.files.indexOf(event), 1);\r\n  }\r\n\r\n  onUpdatePicture() {\r\n    this.spinerService.setSpinerEvent(true);\r\n    this.studentService.updateStudentImage(this.student.id, this.files[0]).subscribe((res) => {\r\n      this.spinerService.setSpinerEvent(false);\r\n      this.dialogRef.close(res);\r\n    })\r\n  }\r\n}\r\n","<div class=\"upload-image-modal\">\r\n  <div *ngIf=\"student?.profilePicture\" class=\"current-image\">\r\n    <span>Current Picture</span>\r\n    <img  [src]=\"student.profilePicture\" />\r\n  </div>\r\n  <div class=\"title\">Change Picture Student</div>\r\n  <ngx-dropzone (change)=\"onSelect($event)\" [multiple]=\"false\">\r\n    <ngx-dropzone-label>Drop files here or click to upload</ngx-dropzone-label>\r\n    <ngx-dropzone-image-preview ngProjectAs=\"ngx-dropzone-preview\" *ngFor=\"let f of files\" [file]=\"f\" [removable]=\"true\" (removed)=\"onRemove(f)\">\r\n      <ngx-dropzone-label>{{ f.name }} ({{ f.type }})</ngx-dropzone-label>\r\n    </ngx-dropzone-image-preview>\r\n  </ngx-dropzone>\r\n  <div class=\"footer-action\">\r\n    <app-button  (click)=\"onUpdatePicture()\" [disabled]=\"!files.length\">Update Student Profile Picture</app-button>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, Injectable, Inject, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n\r\nimport { IStudent } from './../../../models/student';\r\nimport { SpinerService } from '../../../services/spiner.service';\r\nimport { StudentService } from '../../../services/student.service';\r\nimport { RemoveModalComponent } from '../students-list/removemodal.component';\r\nimport { SendModalComponent } from '../../share/send/sendmodal.component';\r\nimport { UploadImageModalComponent } from '../../share/upload-image-modal/upload-image-modal.component';\r\nimport { IGrade } from '../../../models/grade';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport Utils from '../../../utils/utils';\r\n\r\n\r\n@Component({\r\n  selector: 'student-profile',\r\n  templateUrl: './student-profile.component.html',\r\n  styleUrls: ['./student-profile.component.scss']\r\n})\r\nexport class StudentProfileComponent implements OnInit {\r\n\r\n \r\n  id: string;\r\n  student: IStudent;\r\n  birthdate: Date;\r\n  avgGrades: number = 0;\r\n  submitted: boolean = false;\r\n  studentForm: FormGroup;\r\n  isMobile: boolean = false;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private dialog: MatDialog,\r\n    private studentService: StudentService,\r\n    private spinerService: SpinerService,\r\n    private route: ActivatedRoute) {\r\n    this.isMobile = Utils.checkIsmobile();\r\n  }\r\n\r\n  async ngOnInit() {\r\n    this.studentForm = new FormGroup({\r\n      id: new FormControl(''),\r\n      fullname: new FormControl('', Validators.maxLength(60)),\r\n      birthdate: new FormControl(''),\r\n      phone: new FormControl('', [Validators.pattern(\"^[0-9]*$\"), Validators.maxLength(20)]),\r\n      email: new FormControl('', [Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\"), Validators.maxLength(200)]),\r\n      graduationScore: new FormControl('', [Validators.min(30), Validators.max(110)]),\r\n      satScore: new FormControl('', [Validators.min(100), Validators.max(800)]),\r\n    });\r\n\r\n    this.id = this.route.snapshot.paramMap.get('id')\r\n    this.getStudent(+this.id);\r\n\r\n \r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.studentForm.controls; }\r\n\r\n  setValues() {\r\n    this.studentForm.controls['id'].setValue(this.student.id);\r\n    this.studentForm.controls['fullname'].setValue(this.student.fullname);\r\n    this.studentForm.controls['birthdate'].setValue(this.student.birthDate);\r\n    this.studentForm.controls['email'].setValue(this.student.email);\r\n    this.studentForm.controls['phone'].setValue(this.student.phone);\r\n    this.studentForm.controls['graduationScore'].setValue(this.student.graduationScore);\r\n    this.studentForm.controls['satScore'].setValue(this.student.satScore);\r\n  }\r\n\r\n  getStudent(id: number) {\r\n    this.studentService.getStudent(id).subscribe((res) => {\r\n      this.student = res;\r\n      if (this.student?.studentGrades?.length) {\r\n        this.onUpdateGrades(this.student.studentGrades);\r\n      }\r\n      if (typeof this.student.birthDate === 'string') {\r\n        this.birthdate = new Date(this.student.birthDate);\r\n      }\r\n      else {\r\n        this.birthdate = this.student.birthDate;\r\n      }\r\n      this.setValues();\r\n    })\r\n  }\r\n\r\n\r\n  onDeleteStudent(): void {\r\n    let context = [this.student];\r\n    const dialogRef = this.dialog.open(RemoveModalComponent, {\r\n      width: '558px',\r\n      height: '240px',\r\n      panelClass: 'remove-dialog',\r\n      data: context\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n\r\n      if (result) {\r\n        this.deleteClient(result);\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteClient(student: IStudent[]) {\r\n    this.spinerService.setSpinerEvent(true);\r\n    for (let i = 0; i < student.length; i++) {\r\n      this.studentService.deleteStudent(student[i].id).subscribe(result => {\r\n        this.onClose();\r\n      }, error => {\r\n          this.onClose();\r\n        console.error(error)\r\n        this.spinerService.setSpinerEvent(false);\r\n      });\r\n    }\r\n  }\r\n\r\n  onChangeDetails() {\r\n    if (this.birthdate) {\r\n      this.student.birthDate = this.formatDate(this.birthdate);\r\n      this.studentForm.controls['birthdate'].setValue(this.student.birthDate);\r\n    }\r\n  }\r\n\r\n  onClose() {\r\n    this.router.navigateByUrl(`/students-list`);\r\n  }\r\n\r\n  formatDate(d){\r\n    //let d = new Date(date);\r\n    let month = (d.getMonth() + 1).toString().padStart(2, '0');\r\n    let day = d.getDate().toString().padStart(2, '0');\r\n    let year = d.getFullYear();\r\n    return [year, month, day].join('-');\r\n  }\r\n\r\n  onSend(type: string): void {\r\n    const isSms = type === 'sms' ? true : false\r\n    const dialogRef = this.dialog.open(SendModalComponent, {\r\n      width: '800px',\r\n      height: '650px',\r\n      panelClass: `send-dialog_${isSms ? 'sms' : 'email'}`,\r\n      data: {\r\n        isSms: isSms,\r\n        students: [this.student]\r\n      }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n \r\n    });\r\n  }\r\n\r\n  onSendWhatsapp() {\r\n    window.open(`https://api.whatsapp.com/send?phone=${this.student.phone}`, '_blank');\r\n  }\r\n\r\n  onChangePicture() {\r\n    const dialogRef = this.dialog.open(UploadImageModalComponent, {\r\n      width: '920px',\r\n      height: '530px',\r\n      panelClass: 'upload-dialog',\r\n      data: this.student\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.student.profilePicture = result.profilePicture;\r\n      }\r\n    });\r\n  }\r\n\r\n  onUpdateProfile() {\r\n    this.submitted = true;\r\n\r\n    if (this.studentForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.spinerService.setSpinerEvent(true);\r\n    const student = {\r\n      id: this.f.id.value,\r\n      fullname: this.f.fullname.value,\r\n      birthDate: this.f.birthdate.value,\r\n      email: this.f.email.value,\r\n      phone: this.f.phone.value,\r\n      graduationScore: this.f.graduationScore.value,\r\n      satScore: this.f.satScore.value\r\n    }\r\n    this.studentService.updateStudent(student).subscribe(result => {\r\n      this.spinerService.setSpinerEvent(false);\r\n      }, error => {\r\n        console.error(error)\r\n        this.spinerService.setSpinerEvent(false);\r\n      });\r\n    \r\n  }\r\n\r\n  onUpdateGrades(grades: IGrade[]) {\r\n    let sum = 0;\r\n    let count = 0;\r\n    for (let i = 0; i < grades.length; i++) {\r\n      sum += +grades[i].courseScore;\r\n      if (grades[i].courseName && grades[i].courseScore > -1) {\r\n        count++;\r\n      }\r\n    }\r\n    this.avgGrades = isNaN(sum / count) ? 0 : sum / count;\r\n  }\r\n  \r\n}\r\n","<div class=\"student-profile\">\r\n  <div class=\"student-profile-wrapper\">\r\n    <div class=\"student-profile__left-side\">\r\n      <div class=\"student-profile__left-side__student-data\">\r\n        <div class=\"student-profile__left-side__student-data__picture\">\r\n          <img *ngIf=\"student?.profilePicture\" [src]=\"student.profilePicture\" />\r\n          <div class=\"change-photo-wrapper\">\r\n            <i class=\"fa fa-pencil\" aria-hidden=\"true\" (click)=\"onChangePicture()\"></i>\r\n            <div>Change Photo</div>\r\n          </div>\r\n        </div>\r\n        <div class=\"student-profile__left-side__student-data__name\">\r\n          <div>{{student?.fullname}}</div>\r\n          <div *ngIf=\"student?.email\" class=\"student-profile__left-side__student-data__email\">{{student.email}}</div>\r\n        </div>\r\n       \r\n\r\n      </div>\r\n      <div class=\"student-profile__left-side__student-data__action\">\r\n        <div (click)=\"onSend('email')\">\r\n          <img src=\"./assets/images/mail.svg\" height=\"45\" width=\"45\" />\r\n          Send Email\r\n        </div>\r\n        <div (click)=\"onSend('sms')\">\r\n          <img src=\"./assets/images/sms.svg\" height=\"45\" width=\"45\" />\r\n          Send SMS\r\n        </div>\r\n        <div (click)=\"onSendWhatsapp()\">\r\n          <img src=\"./assets/images/whatsApp.webp\" height=\"45\" width=\"45\" />\r\n          Send <br />WhatsApp\r\n        </div>\r\n        <div *ngIf=\"isMobile\">\r\n          <app-button class=\"custom-button bin\" [title]=\"'Delete students'\" [image]=\"'./assets/images/bin_white.svg'\" (click)=\"onDeleteStudent()\"></app-button>\r\n        </div>\r\n      </div>\r\n      <div *ngIf=\"!isMobile\" class=\"student-profile__left-side__footer\">\r\n        <app-button [title]=\"'Delete Student'\" [theme]=\"'danger'\" [image]=\"'./assets/images/bin_white.svg'\" (click)=\"onDeleteStudent()\">Delete</app-button>\r\n      </div>\r\n    </div>\r\n    <div class=\"student-profile__right-side\">\r\n      <form  [formGroup]=\"studentForm\" (ngSubmit)=\"onUpdateProfile()\">\r\n        <div class=\"student-profile__right-side__section\">\r\n          <div class=\"student-profile__right-side__section__title\">\r\n            <div class=\"header\">Basic</div>\r\n            <div>\r\n              <label>Id</label>\r\n              <input formControlName=\"id\" disabled width=\"80\" />\r\n            </div>\r\n          </div>\r\n          <div class=\"student-profile__right-side__section__content\">\r\n            <div>\r\n              <label>Name</label>\r\n              <input class=\"form__input\" type=\"text\" formControlName=\"fullname\" width=\"80\" [ngClass]=\"{ 'is-invalid': submitted && f.fullname.errors }\" />\r\n            </div>\r\n            <div>\r\n              <label class=\"date-label\">D.O.B</label>\r\n              <mat-form-field class=\"date\">\r\n                <input matInput [matDatepicker]=\"birthdatepicker\" formControlName=\"birthdate\" (dateChange)=\"onChangeDetails()\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"birthdatepicker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #birthdatepicker></mat-datepicker>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div class=\"student-profile__right-side__section__content\">\r\n            <div>\r\n              <label>Phone</label>\r\n              <input type=\"text\" formControlName=\"phone\" width=\"80\" (change)=\"onChangeDetails()\" [ngClass]=\"{ 'is-invalid': submitted && f.phone.errors }\" />\r\n            </div>\r\n            <div>\r\n              <label>Email</label>\r\n              <input type=\"email\"  formControlName=\"email\" width=\"80\" (change)=\"onChangeDetails()\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n        <div class=\"student-profile__right-side__section\">\r\n          <div class=\"student-profile__right-side__section__title\">\r\n            <div class=\"header\">Grades</div>\r\n\r\n          </div>\r\n          <div class=\"student-profile__right-side__section__content\">\r\n            <div>\r\n              <label>H.School Avg%</label>\r\n              <input type=\"number\"   formControlName=\"graduationScore\" width=\"80\" (change)=\"onChangeDetails()\" [ngClass]=\"{ 'is-invalid': submitted && f.graduationScore.errors }\"/>\r\n            </div>\r\n            <div>\r\n              <label>SAT Score</label>\r\n              <input type=\"number\"  formControlName=\"satScore\" width=\"80\" (change)=\"onChangeDetails()\" [ngClass]=\"{ 'is-invalid': submitted && f.satScore.errors }\"/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      <div class=\"student-profile__right-side__grade_section\">\r\n        <div class=\"student-profile__right-side__section\">\r\n          <div class=\"student-profile__right-side__section__title\">\r\n            <div class=\"header\">Course Grades</div>\r\n          </div>\r\n          <div class=\"student-profile__right-side__section__content\">\r\n            <div class=\"\" *ngIf=\"student\">\r\n              <app-course-grades [student]=\"student\" (courseGrades)=\"onUpdateGrades($event)\"></app-course-grades>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"student-profile__right-side__section\">\r\n          <div class=\"student-profile__right-side__section__title\">\r\n            <div class=\"header\">Course Avarage Grade</div>\r\n          </div>\r\n          <div class=\"student-profile__right-side__section__content\">\r\n            <div class=\"\">\r\n              <div class=\"avg-grade\"><span>{{avgGrades}}</span><span>%</span></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"student-profile__right-side__footer\">\r\n        <app-button [title]=\"'Close'\" [image]=\"'./assets/images/cross.svg'\" [type]=\"'submit'\" (click)=\"onUpdateProfile()\">Update Profile</app-button>\r\n        <app-button [title]=\"'Close'\" [theme]=\"'ghost'\" [image]=\"'./assets/images/cross_blue.svg'\" (click)=\"onClose()\">Cancel</app-button>\r\n      </div>\r\n    </div>\r\n    </div>\r\n  </div>\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\nimport { IStudent } from './../../../models/student';\r\n\r\n@Component({\r\n  selector: 'app-removemodal',\r\n  templateUrl: './removemodal.component.html',\r\n  styleUrls: ['./removemodal.component.css']\r\n})\r\nexport class RemoveModalComponent implements OnInit {\r\n\r\n  title: string;\r\n  content: string;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<RemoveModalComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: IStudent[]) { }\r\n\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.title = \"\";\r\n    const content = this.data.length === 1 ? `Are you sure you want to delete?` : `Delete selected (${this.data.length})  Records?`;\r\n    this.content = content;\r\n  }\r\n\r\n  onDelete() {\r\n    this.dialogRef.close(this.data)\r\n  }\r\n}\r\n","<h1 mat-dialog-title>{{title}}</h1>\r\n<button class=\"close\" mat-button (click)=\"onNoClick()\">X</button>\r\n<div mat-dialog-content>\r\n  {{content}}\r\n</div>\r\n<div mat-dialog-actions>\r\n  <app-button mat-button mat-dialog-close [image]=\"'./assets/images/cross.svg'\">Cancel</app-button>\r\n  <!--<button mat-button mat-dialog-close cdkFocusInitial (click)=\"onDelete()\">Delete</button>-->\r\n  <app-button mat-button mat-dialog-close cdkFocusInitial [title]=\"'Delete Student'\" [theme]=\"'danger'\" [image]=\"'./assets/images/bin_white.svg'\" (click)=\"onDelete()\">Delete</app-button>\r\n</div>\r\n\r\n","import { Component, OnInit, Injectable, Inject, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, retry, filter } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { IStudent } from './../../../models/student';\r\nimport { IPagination } from './../../../models/pagination';\r\nimport { StudentService } from '../../../services/student.service';\r\nimport { SpinerService } from '../../../services/spiner.service';\r\n\r\nimport { MatMenu, MatMenuTrigger } from '@angular/material/menu';\r\nimport { IFilter } from '../../../models/filter';\r\nimport { RemoveModalComponent } from './removemodal.component';\r\nimport { SendModalComponent } from '../../share/send/sendmodal.component';\r\nimport { UploadImageModalComponent } from '../../share/upload-image-modal/upload-image-modal.component';\r\nimport { utils } from 'protractor';\r\nimport Utils from '../../../utils/utils';\r\n\r\nexport const TOTAL = 10;\r\n\r\n@Component({\r\n  selector: 'students-list',\r\n  templateUrl: './students-list.component.html',\r\n  styleUrls: ['./students-list.component.scss']\r\n})\r\nexport class StudentsListComponent implements OnInit {\r\n  \r\n  dialogData: IStudent;\r\n\r\n  students: IStudent[] = [{}];\r\n  selectedStudent: IStudent;\r\n  pagination: IPagination = {\r\n    count: TOTAL,\r\n    page: 1,\r\n    sort: \"id\",\r\n    sortDirection: \"asc\"\r\n  };\r\n\r\n  filters: IFilter;\r\n\r\n  totalPages: number[] = [];\r\n  currentPage: number = 0;\r\n\r\n\r\n  memberForm: any;\r\n  isCreated: boolean = false;\r\n  userDetails: IStudent;\r\n  userObj: any;\r\n  isMobile: boolean = false;\r\n  isShowFilter: boolean = false;\r\n  countSelectedStudents: number = 0;\r\n  sortDirection: string = \"asc\" || \"desc\";\r\n  @ViewChild(MatMenuTrigger)\r\n  contextMenu: MatMenuTrigger;\r\n  totalStudents: number = 0;\r\n\r\n  contextMenuPosition = { x: '0px', y: '0px' };\r\n\r\n  terms?: string = \"\";\r\n\r\n  constructor(private router: Router,\r\n    private dialog: MatDialog,\r\n    private studentService: StudentService,\r\n    private spinerService: SpinerService) {\r\n    this.isMobile = Utils.checkIsmobile();\r\n}\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.terms = this.studentService.getTerms();\r\n    this.getAllStudents();\r\n  }\r\n\r\n  onRefresh() {\r\n    location.reload();\r\n  }\r\n\r\n  onAddStudent() {\r\n\r\n  }\r\n\r\n  onEditStudent(id: number) {\r\n    this.router.navigateByUrl(`/student-profile/${id}`);\r\n  }\r\n  getSelectedStudents() {\r\n    return this.students.filter(s => s.checked );\r\n  }\r\n\r\n  onDeleteStudent(data?: IStudent): void {\r\n    let context = Array.isArray(data) ? data : data ? [data] : this.getSelectedStudents();\r\n    const dialogRef = this.dialog.open(RemoveModalComponent, {\r\n      width: '558px',\r\n      height: '240px',\r\n      panelClass: 'remove-dialog',\r\n      data: context\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n    \r\n      if (result) {\r\n        this.deleteClient(result);\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteClient(student: IStudent[]) {\r\n    this.spinerService.setSpinerEvent(true);\r\n    for (let i = 0; i < student.length; i++) {\r\n      this.studentService.deleteStudent(student[i].id).subscribe(result => {\r\n        this.getAllStudents();\r\n      }, error => {\r\n        this.getAllStudents();\r\n        console.error(error)\r\n        this.spinerService.setSpinerEvent(false);\r\n      });\r\n    }\r\n  }\r\n\r\n  fillFilters(params: any, filters?: IFilter) {\r\n    if (filters?.name || this.terms) {\r\n      params.fullName = filters?.name || this.terms\r\n    }\r\n    if (filters?.fromDate) {\r\n      params.fromDate = filters.fromDate\r\n    }\r\n    if (filters?.toDate) {\r\n      params.toDate = filters.toDate\r\n    }\r\n    if (filters?.fromSat) {\r\n      params.fromSatScore = filters.fromSat\r\n    }\r\n    if (filters?.toSat) {\r\n      params.toSatScore = filters.toSat\r\n    }\r\n    if (filters?.fromAvg) {\r\n      params.fromAvgScore = filters.fromAvg\r\n    }\r\n    if (filters?.toAvg) {\r\n      params.toAvgScore = filters.toAvg\r\n    }\r\n    return params;\r\n  }\r\n\r\n  getAllStudents() {\r\n    this.spinerService.setSpinerEvent(true);\r\n    let dataParams = {\r\n      count: TOTAL,\r\n      page: this.pagination.page,\r\n      sort: this.pagination.sort,\r\n      sortDirection: this.pagination.sortDirection, \r\n    }\r\n    dataParams = this.fillFilters(dataParams, this.filters);\r\n    this.studentService.getStudents(dataParams).subscribe(result => {\r\n      this.students = result.data;\r\n      this.pagination = result.pagination;\r\n      this.totalStudents = this.pagination.count;\r\n      this.totalPages = [];\r\n     \r\n      const totalPages = Math.ceil(this.totalStudents / TOTAL);\r\n      for (let i = 0; i < totalPages; i++) {\r\n        this.totalPages.push(i);\r\n      }\r\n\r\n      this.totalPages.fill(0, totalPages);\r\n\r\n      if (!this.currentPage) {\r\n        this.currentPage = 1;\r\n      }\r\n     \r\n      this.spinerService.setSpinerEvent(false);\r\n    }, error => { \r\n      this.spinerService.setSpinerEvent(false);\r\n      /*setTimeout(() => {\r\n        this.router.navigateByUrl('login');\r\n      }, 3000);*/\r\n    });\r\n  }\r\n\r\n  onNextPage(page) {\r\n    this.currentPage = page;\r\n    this.pagination.page = page;\r\n    this.getAllStudents();\r\n  }\r\n\r\n  onPreviusPage(page) {\r\n    this.currentPage = page;\r\n    this.pagination.page = page;\r\n    this.getAllStudents();\r\n  }\r\n\r\n  onClickPage(page: number) {\r\n    /*if (this.currentPage < page) {\r\n      this.onNextPage();\r\n    }\r\n    else if (this.currentPage > page) {\r\n      this.onPreviusPage();\r\n    }*/\r\n    this.currentPage = page + 1;\r\n    this.pagination.page = page + 1;\r\n    this.getAllStudents();\r\n  }\r\n\r\n  checkAllCheckBox(ev: any) {\r\n    this.students.forEach(s => s.checked = ev.target.checked)\r\n    this.countSelectedStudents = this.students.filter(s => s.checked).length;\r\n  }\r\n\r\n  isAllCheckBoxChecked(ev:any) {\r\n    return this.students.every(s => s.checked);\r\n  }\r\n\r\n  onChecked(ev: any) {\r\n    ev.preventDefault();\r\n    ev.stopPropagation();\r\n    if (ev.target.checked) {\r\n      this.countSelectedStudents++;\r\n    }\r\n    else {\r\n      this.countSelectedStudents--;\r\n    }\r\n  }\r\n\r\n  onSelectedStudent(selected) {\r\n    if (selected) {\r\n      this.countSelectedStudents++;\r\n    }\r\n    else {\r\n      this.countSelectedStudents--;\r\n    }\r\n  }\r\n\r\n  sortOn(column) {\r\n    this.sortDirection = this.sortDirection === \"asc\" ? \"desc\" : \"asc\";\r\n    this.pagination.sort = column;\r\n    this.pagination.sortDirection = this.sortDirection;\r\n    this.getAllStudents();\r\n  }\r\n\r\n  onApply(filters: IFilter) {\r\n    this.filters = filters;\r\n    this.getAllStudents();\r\n  }\r\n\r\n  onClearAll(filters) {\r\n    this.filters = filters;\r\n    this.getAllStudents();\r\n  }\r\n\r\n  onSend(type: string, student: IStudent): void {\r\n\r\n    let students = student ? [student] : this.getSelectedStudents();\r\n    const isSms = type === 'sms' ? true : false\r\n    const dialogRef = this.dialog.open(UploadImageModalComponent, {\r\n      width: '800px',\r\n      height: '650px',\r\n      panelClass: `send-dialog_${isSms ? 'sms' : 'email'}`,\r\n      data: student\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n\r\n    });\r\n  }\r\n\r\n  onChangePicture(student: IStudent) {\r\n    this.selectedStudent = student;\r\n    const dialogRef = this.dialog.open(UploadImageModalComponent, {\r\n      width: '920px',\r\n      height: '530px',\r\n      panelClass: 'upload-dialog',\r\n      data: student\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.selectedStudent.profilePicture = result.profilePicture;\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"student-list\">\r\n  <div class=\"student-list__header\">\r\n    <div class=\"student-list__header__title\">\r\n      Students\r\n      <div class=\"student-list__total\">Total Students: {{totalStudents}}</div>\r\n      <div *ngIf=\"isMobile\" class=\"select-all\">\r\n        <label class=\"checkbox-form-control\">\r\n          <input type=\"checkbox\" [checked]=\"isAllCheckBoxChecked()\" (change)=\"checkAllCheckBox($event)\">\r\n          <span class=\"checkmark\"></span>\r\n        </label>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"student-list__header__action\">\r\n      <div *ngIf=\"countSelectedStudents > 1 || isMobile\" class=\"student-list__header__action__multi\">\r\n        <app-button class=\"custom-button sms\" [title]=\"'Send sms to students'\" [image]=\"'./assets/images/sms.svg'\" (click)=\"onSend('sms')\"></app-button>\r\n        <app-button class=\"custom-button mail\" [title]=\"'Send email to students'\" [image]=\"'./assets/images/mail.svg'\" (click)=\"onSend('email')\"></app-button>\r\n        <app-button class=\"custom-button bin\" [title]=\"'Delete students'\" [image]=\"'./assets/images/bin_white.svg'\" (click)=\"onDeleteStudent()\"></app-button>\r\n      </div>\r\n      <div class=\"student-list__header__action__buttons\">\r\n        <app-button *ngIf=\"!isMobile\" [title]=\"'Filter Student'\" [image]=\"'./assets/images/filter.svg'\" (click)=\"isShowFilter = !isShowFilter\">Filter by <i class=\"fa fa-chevron-right\" aria-hidden=\"true\"></i></app-button>\r\n        <app-button *ngIf=\"!isMobile\" [title]=\"'Add Student'\" [theme]=\"'ghost'\" [image]=\"'./assets/images/cross_blue.svg'\" [imgClass]=\"'rotate-45'\" (click)=\"onAddStudent()\">Add Student</app-button>\r\n        <app-button *ngIf=\"isMobile\" [title]=\"'Filter Student'\" [image]=\"'./assets/images/filter.svg'\" (click)=\"isShowFilter = !isShowFilter\"></app-button>\r\n        <app-button *ngIf=\"isMobile\" [title]=\"'Add Student'\" [theme]=\"'ghost'\" [image]=\"'./assets/images/cross_blue.svg'\" [imgClass]=\"'rotate-45'\" (click)=\"onAddStudent()\"></app-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n\r\n  <div [hidden]=\"!isShowFilter\" class=\"student-list__header__filters\">\r\n    <app-table-filters [terms]=\"terms\" (apply)=\"onApply($event)\" (clearAll)=\"onClearAll($event)\"></app-table-filters>\r\n  </div>\r\n\r\n  <div *ngIf=\"!isMobile && students?.length;\">\r\n    <table class=\"datatable\">\r\n      <thead>\r\n        <tr>\r\n          <th>\r\n            <label class=\"checkbox-form-control\">\r\n              <input type=\"checkbox\" [checked]=\"isAllCheckBoxChecked()\" (change)=\"checkAllCheckBox($event)\">\r\n              <span class=\"checkmark\"></span>\r\n            </label>\r\n          </th>\r\n          <th (click)=\"sortOn('id')\">\r\n            ID <i class='fa fa-sort'></i>\r\n          </th>\r\n          <th (click)=\"sortOn('fullName')\">Name <i class='fa fa-sort'></i></th>\r\n          <th (click)=\"sortOn('birthDate')\">Date of Birth <i class='fa fa-sort'></i></th>\r\n          <th (click)=\"sortOn('graduationScore')\">Highschool Avg % <i class='fa fa-sort'></i></th>\r\n          <th (click)=\"sortOn('satScore')\">SAT Score <i class='fa fa-sort'></i></th>\r\n          <th (click)=\"sortOn('phone')\">Phone <i class='fa fa-sort'></i></th>\r\n          <th (click)=\"sortOn('email')\">Email <i class='fa fa-sort'></i></th>\r\n          <th (click)=\"sortOn('profilepicture')\">Pic <i class='fa fa-sort'></i></th>\r\n          <th (click)=\"sortOn('avgScore')\">Course Avg Grade <i class='fa fa-sort'></i></th>\r\n          <th></th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let student of students; let i=index;\">\r\n          <td>\r\n            <label class=\"checkbox-form-control\">\r\n              <input type=\"checkbox\" value=\"{{student.id}}\" [(ngModel)]=\"students[i].checked\" (change)=\"onChecked($event)\">\r\n              <span class=\"checkmark\"></span>\r\n            </label>\r\n          </td>\r\n          <td>{{ student.id }}</td>\r\n          <td (click)=\"onEditStudent(student.id)\" class=\"pointer\">{{ student.fullname }}</td>\r\n          <td>{{ student.birthdate }}</td>\r\n          <td>{{ student.graduationscore }}</td>\r\n          <td>{{ student.satscore }}</td>\r\n          <td class=\"center\">{{ student.phone }}</td>\r\n          <td class=\"center\">{{ student.email }}</td>\r\n          <td class=\"center\"> <img *ngIf=\"student?.profilePicture\" [src]=\"student.profilePicture\" width=\"36\" height=\"36\" /></td>\r\n          <td>{{ student.avgscore }}</td>\r\n          <td><i class=\"fa fa-ellipsis-h\" aria-hidden=\"true\" [matMenuTriggerFor]=\"menu\" [matMenuTriggerData]=\"{context:student}\" (contextmenu)=\"onContextMenu($event, student)\"></i></td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n  </div>\r\n\r\n  <div *ngIf=\"isMobile && students?.length;\">\r\n    <div *ngFor=\"let student of students; let i=index;\" class=\"student-data\">\r\n      <div class=\"student-data__section first\">\r\n        <label class=\"checkbox-form-control\">\r\n          <input type=\"checkbox\" value=\"{{student.id}}\" [(ngModel)]=\"students[i].checked\" (change)=\"onChecked($event)\">\r\n          <span class=\"checkmark\"></span>\r\n        </label>\r\n        <img [hidden]=\"!student?.profilePicture\" [src]=\"student.profilePicture\" />\r\n        <div class=\"student-data__section__data no-margin\">\r\n          <label>ID:</label>\r\n          <span>{{ student.id }}</span>\r\n        </div>\r\n        <div class=\"action\">\r\n          <i class=\"fa fa-ellipsis-h\" aria-hidden=\"true\" [matMenuTriggerFor]=\"menu\" [matMenuTriggerData]=\"{context:student}\" (contextmenu)=\"onContextMenu($event, student)\"></i>\r\n        </div>\r\n      </div>\r\n      <div class=\"student-data__section\">\r\n        <div class=\"student-data__section__data\">\r\n          <label>Name:</label>\r\n          <span [attr.title]=\"student.fullname\">{{ student.fullname }}</span>\r\n        </div>\r\n        <div class=\"student-data__section__data\">\r\n          <label>D.O.B:</label>\r\n          <span [attr.title]=\"student.birthdate\">{{ student.birthdate }}</span>\r\n        </div>\r\n      </div>\r\n      <div class=\"student-data__section\">\r\n        <div class=\"student-data__section__data\">\r\n          <label>H.S Avg:</label>\r\n          <span [attr.title]=\"student.satscore\">{{ student.satscore }}</span>\r\n        </div>\r\n        <div class=\"student-data__section__data\">\r\n          <label>Phone:</label>\r\n          <span [attr.title]=\"student.phone\">{{ student.phone }}</span>\r\n        </div>\r\n      </div>\r\n      <div class=\"student-data__section\">\r\n        <div class=\"student-data__section__data\">\r\n          <label>Avg GR.:</label>\r\n          <span [attr.title]=\"student.graduationscore\">{{ student.graduationscore }}</span>\r\n        </div>\r\n        <div class=\"student-data__section__data\">\r\n          <label>Email:</label>\r\n          <span [attr.title]=\"student.email\">{{ student.email }}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"student-list__pagination\" *ngIf=\"totalPages.length > 1\">\r\n    <div class=\"student-list__pagination__wrapper\">\r\n      <a [hidden]=\"currentPage === 0\" class=\"pointer\" (click)=\"onPreviusPage(currentPage - 1)\"><i class=\"fa fa-chevron-left\" aria-hidden=\"true\"></i></a>\r\n      <a *ngFor=\"let page of totalPages; let i=index;\" class=\"pointer\" [ngClass]=\"{'selected': currentPage === page + 1}\" (click)=\"onClickPage(page)\">\r\n        <span>{{page + 1}}</span>\r\n      </a>\r\n      <a [hidden]=\"currentPage === totalPages.length\" class=\"pointer\" (click)=\"onNextPage(currentPage + 1)\"><i class=\"fa fa-chevron-right\" aria-hidden=\"true\"></i></a>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<mat-menu #menu=\"matMenu\" class=\"customize-menu\">\r\n  <ng-template matMenuContent let-item=\"context\">\r\n    <div class=\"item-wrapper\">\r\n      <button mat-menu-item class=\"half-item\" (click)=\"onSend('sms', item)\">\r\n        <img src=\"./assets/images/sms.svg\" height=\"45\" width=\"45\" />\r\n        Send SMS\r\n      </button>\r\n      <button mat-menu-item class=\"half-item\" (click)=\"onSend('email', item)\">\r\n        <img src=\"./assets/images/mail.svg\" height=\"45\" width=\"45\" />\r\n        Send Email\r\n      </button>\r\n    </div>\r\n    <button mat-menu-item (click)=\"onEditStudent(item.id)\">Edit student profile</button>\r\n    <button mat-menu-item (click)=\"onChangePicture(item)\">Change student picture</button>\r\n    <button mat-menu-item class=\"danger\" (click)=\"onDeleteStudent(item)\"><img src=\"./assets/images/bin.svg\" height=\"22\" width=\"18\" /> Delete</button>\r\n  </ng-template>\r\n</mat-menu>\r\n\r\n\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService  {\r\n  constructor() { }\r\n\r\n  public setAuthenticated(isAuth:boolean):void {\r\n\r\n  }\r\n  public isAuthenticated(): boolean {\r\n    const token = sessionStorage.getItem('token');\r\n    return !!token;\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SpinerService {\r\n\r\n  public dataObsevable: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(null);\r\n\r\n  constructor() {\r\n  }\r\n\r\n  setSpinerEvent(isLoading: boolean) {\r\n    this.dataObsevable.next(isLoading); \r\n  }\r\n\r\n  getEventListner() {\r\n    return this.dataObsevable.asObservable();\r\n  } \r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\nimport { IStudent } from '../models/student';\r\nimport { FetcherService } from '../@core/services/fetcher.service';\r\nimport { Api } from '../@core/models/api.enum';\r\nimport { IGrade } from '../models/grade';\r\n\r\n//After that we write all methods related to consume web in client.service.ts \r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class StudentGradeService {\r\n  \r\n  constructor(private http: HttpClient,\r\n    private featcher: FetcherService) { }\r\n\r\n  insertStudentGrade(studentId: number, data: IGrade): Observable<any> {\r\n    return this.featcher.post<any>(Api.insertStudentGrade, { courseName: data.courseName, courseScore: data.courseScore}, { id:studentId})\r\n  }\r\n\r\n  deleteStudentGrade(studentId: number, id: number): Observable<any> {\r\n    return this.featcher.delete<any>(Api.modifyStudentGrade, { studentId, id })\r\n  }\r\n\r\n  updateStudentGrade(studentId: number, id: number, data: IGrade): Observable<any> {\r\n    return this.featcher.put<any>(Api.modifyStudentGrade, { courseName: data.courseName, courseScore: data.courseScore }, { studentId, id  })\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\nimport { IStudent } from '../models/student';\r\nimport { FetcherService } from '../@core/services/fetcher.service';\r\nimport { Api } from '../@core/models/api.enum';\r\n\r\n//After that we write all methods related to consume web in client.service.ts \r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class StudentService {\r\n\r\n  terms?: string = \"\";\r\n  constructor(private http: HttpClient,\r\n    private featcher: FetcherService) { }\r\n\r\n  setTerms(terms?: string) {\r\n    this.terms = terms;\r\n  }\r\n\r\n  getTerms() {\r\n    return this.terms;\r\n  }\r\n\r\n  getStudents(data: any): Observable<any> {\r\n    return this.featcher.get(Api.students, data)\r\n  }\r\n\r\n  insertStudent(student: IStudent): Observable<any> {\r\n    return this.featcher.post<any>(Api.students, { student })\r\n  }\r\n\r\n  getHighSatStudents(sat: number): Observable<any> {\r\n    return this.featcher.get(Api.studentHighSat, { sat })\r\n  }\r\n\r\n  sendSmsToAll(text: string): Observable<any> {\r\n    let url = `${Api.studentSendSmsAll}?text=${text}`\r\n    return this.featcher.post<any>(url, {}, {}, { noToastr: true })\r\n  }\r\n\r\n  sendSms(text: string, ids: number[]): Observable<any> {\r\n    let params = \"\";\r\n    for (let i = 0; i < ids.length; i++) {\r\n      params += `&ids=${ids[i]}`;\r\n    }\r\n    let url = `${Api.studentSendSms}?text=${text}${params}`\r\n    return this.featcher.post<any>(url, {}, {}, { noToastr: true })\r\n  }\r\n\r\n  sendEmail(subject: string, text: string, ids: number[]): Observable<any> {\r\n    let params = \"\";\r\n    for (let i = 0; i < ids.length; i++) {\r\n      params += `&ids=${ids[i]}`;\r\n    }\r\n    let url = `${Api.studentSendEmail}?subject=${subject}&text=${text}${params}`\r\n    return this.featcher.post<any>(url, {}, {}, { noToastr: true })\r\n  }\r\n\r\n  deleteStudent(id: number): Observable<any> {\r\n    return this.featcher.delete<any>(Api.modifyStudent, { id })\r\n  }\r\n\r\n  getStudent(id: number): Observable<any> {\r\n    return this.featcher.get<any>(Api.modifyStudent, {}, { id })\r\n  }\r\n\r\n  updateStudent(_student: IStudent): Observable<any> {\r\n    return this.featcher.put<any>(Api.updateStudent, {\r\n      fullname: _student.fullname || \"\",\r\n      birthDate: _student.birthDate || \"\",\r\n      satScore: +_student.satScore,\r\n      graduationScore: +_student.graduationScore,\r\n      phone: _student.phone || \"\",\r\n      email: _student.email || \"\" }, { id: _student.id })\r\n  }\r\n\r\n  updateStudentImage(id: number, image: File): Observable<any> {\r\n    const data = { image };\r\n    const formData = this.featcher.createFormData(data);\r\n    return this.featcher.put<any>(Api.updateStudentImage, formData, { id })\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { FetcherService } from '../@core/services/fetcher.service';\r\nimport { Api } from '../@core/models/api.enum';\r\nimport { IUser } from '../models/user';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n//After that we write all methods related to consume web in client.service.ts \r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  public userDetails: BehaviorSubject<any> = new BehaviorSubject<any>(null);\r\n\r\n  constructor(private http: HttpClient,\r\n    private featcher: FetcherService) { }\r\n\r\n  autentication(username: string, password: string): Observable<any> {\r\n    return this.featcher.post<any>(Api.autentication, { username: username, password: password }, {}, {}, false)\r\n  }\r\n\r\n  getuserDetails() {\r\n    return this.featcher.get<IUser>(Api.userDetails);\r\n  }\r\n\r\n  setUserDetailsData(details: any) {\r\n    this.userDetails.next(details); \r\n  }\r\n\r\n  getUserDetailsData() {\r\n    return this.userDetails.asObservable();\r\n  }\r\n\r\n}\r\n","export default class Utils {\r\n  static checkIsmobile() {\r\n    if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\r\n      return true;\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  url:'http://3.125.50.55:8097'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}